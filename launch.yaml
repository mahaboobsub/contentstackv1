# Contentstack Launch Configuration
# This file configures the deployment of ContentIQ to Contentstack Launch

project_id: ${CONTENTSTACK_LAUNCH_PROJECT_ID}
name: ContentIQ Chat Platform
description: AI-powered chat platform with MCP integration for content management

# Build Configuration
build:
  framework: vite
  build_command: npm run build
  output_directory: dist/public
  install_command: npm install
  
  # Environment Variables for Build
  environment:
    NODE_ENV: production
    VITE_API_URL: ${API_URL}
    VITE_CONTENTSTACK_API_KEY: ${CONTENTSTACK_API_KEY}
    VITE_CONTENTSTACK_DELIVERY_TOKEN: ${CONTENTSTACK_DELIVERY_TOKEN}

# Runtime Configuration
runtime:
  node_version: "18"
  
  # Environment Variables for Runtime
  environment:
    # Server Configuration
    PORT: 5000
    HOST: 0.0.0.0
    NODE_ENV: production
    
    # API Configuration
    API_URL: https://api.contentiq.app
    
    # Contentstack Configuration
    CONTENTSTACK_API_KEY: ${CONTENTSTACK_API_KEY}
    CONTENTSTACK_DELIVERY_TOKEN: ${CONTENTSTACK_DELIVERY_TOKEN}
    CONTENTSTACK_MANAGEMENT_TOKEN: ${CONTENTSTACK_MANAGEMENT_TOKEN}
    CONTENTSTACK_ENVIRONMENT: production
    CONTENTSTACK_LAUNCH_PROJECT_ID: ${CONTENTSTACK_LAUNCH_PROJECT_ID}
    
    # LLM Configuration
    GROQ_API_KEY: ${GROQ_API_KEY}
    OPENAI_API_KEY: ${OPENAI_API_KEY}
    
    # Redis Configuration (if using external Redis)
    REDIS_URL: ${REDIS_URL}
    
    # Security
    SESSION_SECRET: ${SESSION_SECRET}
    
    # CORS Configuration
    ALLOWED_ORIGINS: https://contentiq.app,https://www.contentiq.app

# Routing and Redirects
routes:
  # Main application routes
  - source: /
    destination: /index.html
    
  - source: /dashboard
    destination: /index.html
    
  # API routes (if backend is deployed separately)
  - source: /api/*
    destination: ${API_URL}/api/:splat
    
  # Widget distribution
  - source: /widget.js
    destination: /public/widget.js
    headers:
      Cache-Control: public, max-age=3600
      Content-Type: application/javascript
      Access-Control-Allow-Origin: "*"
      Access-Control-Allow-Methods: GET, OPTIONS
      Access-Control-Allow-Headers: Content-Type
  
  # Static assets
  - source: /assets/*
    destination: /assets/:splat
    headers:
      Cache-Control: public, max-age=31536000

# Headers Configuration
headers:
  # Security Headers
  - source: /*
    headers:
      X-Frame-Options: DENY
      X-Content-Type-Options: nosniff
      X-XSS-Protection: 1; mode=block
      Referrer-Policy: strict-origin-when-cross-origin
      Permissions-Policy: camera=(), microphone=(), geolocation=()
      
  # CORS for API endpoints
  - source: /api/*
    headers:
      Access-Control-Allow-Origin: https://contentiq.app
      Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Headers: Content-Type, Authorization
      Access-Control-Allow-Credentials: true

# Custom Domain Configuration
domains:
  - contentiq.app
  - www.contentiq.app

# SSL Configuration
ssl:
  certificate_type: lets_encrypt
  force_https: true

# Functions Configuration (for API endpoints if using serverless)
functions:
  api:
    runtime: nodejs18
    memory: 512
    timeout: 30
    environment:
      CONTENTSTACK_API_KEY: ${CONTENTSTACK_API_KEY}
      CONTENTSTACK_DELIVERY_TOKEN: ${CONTENTSTACK_DELIVERY_TOKEN}
      CONTENTSTACK_MANAGEMENT_TOKEN: ${CONTENTSTACK_MANAGEMENT_TOKEN}
      GROQ_API_KEY: ${GROQ_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      REDIS_URL: ${REDIS_URL}

# Edge Configuration
edge:
  # Enable edge caching for static assets
  cache:
    - source: /assets/*
      ttl: 86400 # 24 hours
      
    - source: /widget.js
      ttl: 3600 # 1 hour
      
    - source: /_app/*
      ttl: 86400 # 24 hours

# Analytics and Monitoring
analytics:
  providers:
    - contentstack_insights
    
monitoring:
  health_check:
    path: /api/health
    interval: 300 # 5 minutes
    
  alerts:
    - type: response_time
      threshold: 5000 # 5 seconds
      
    - type: error_rate
      threshold: 5 # 5%
      
    - type: uptime
      threshold: 99 # 99%

# Deployment Settings
deployment:
  auto_deploy: true
  branch: main
  
  # Preview deployments
  preview:
    enabled: true
    branches:
      - develop
      - feature/*
      
  # Build optimizations
  optimizations:
    minify: true
    compress: true
    tree_shaking: true
    
  # Node.js optimizations
  node:
    version: "18"
    package_manager: npm
    
# Integration Settings
integrations:
  # Contentstack CMS Integration
  contentstack:
    stack_api_key: ${CONTENTSTACK_API_KEY}
    delivery_token: ${CONTENTSTACK_DELIVERY_TOKEN}
    environment: production
    
  # Third-party Services
  services:
    - name: groq
      enabled: true
      
    - name: openai
      enabled: true
      
    - name: redis
      enabled: true

# Development Settings (for preview deployments)
development:
  environment:
    CONTENTSTACK_ENVIRONMENT: development
    NODE_ENV: development
    DEBUG: true
    
  # Hot reload for preview deployments
  hot_reload: true
  
  # Development-specific routes
  routes:
    - source: /dev/*
      destination: /dev/:splat
